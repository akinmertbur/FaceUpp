<%- include('partials/header') %>
<div class="container mt-5">
  <h1>Register</h1>

  <div class="row">
    <div class="col-sm-8">
      <div class="card">
        <div class="card-body">
          <!-- Makes POST request to /register route -->
          <form id="registerForm" action="/api/auth/register" method="POST" onsubmit="return validateForm()">
            <div class="form-group">
              <label for="username">Username</label>
              <input type="text" class="form-control" id="username" name="username" required>
              <div class="invalid-feedback" id="usernameError"></div>
            </div>
            <div class="form-group">
              <label for="email">Email</label>
              <input type="email" class="form-control" id="email" name="email" required>
              <div class="invalid-feedback" id="emailError"></div>
            </div>
            <div class="form-group">
              <label for="password">Password</label>
              <input type="password" class="form-control" id="password" name="password" required minlength="8">
              <div class="invalid-feedback" id="passwordError"></div>
            </div>
            <button type="submit" class="btn btn-dark">Register</button>
          </form>
          <p class="login-register-msg">Click <a href="/login">here</a> to Login</p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function validateForm() {
    let isValid = true;

    const username = document.getElementById('username').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();

    // Username validation
    if (username === "") {
      document.getElementById('usernameError').innerText = "Username is required";
      document.getElementById('username').classList.add('is-invalid');
      isValid = false;
    } else {
      document.getElementById('usernameError').innerText = "";
      document.getElementById('username').classList.remove('is-invalid');
    }

    // Email validation
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(email)) {
      document.getElementById('emailError').innerText = "Valid email is required";
      document.getElementById('email').classList.add('is-invalid');
      isValid = false;
    } else {
      document.getElementById('emailError').innerText = "";
      document.getElementById('email').classList.remove('is-invalid');
    }

    // Password validation
    if (password.length < 8) {
      document.getElementById('passwordError').innerText = "Password must be at least 8 characters long";
      document.getElementById('password').classList.add('is-invalid');
      isValid = false;
    } else {
      document.getElementById('passwordError').innerText = "";
      document.getElementById('password').classList.remove('is-invalid');
    }

    return isValid;
  }
</script>

<%- include('partials/footer') %>
